name: CI

on:
  push:
    branches-ignore: [upm*]
  pull_request:
    branches-ignore: [upm*]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        unity_version:
          - "2022.3.0f1" # base LTS revision
          - "2022.3.12f1" # development revision
          - "2022.3.17f1" # current LTS revision
    permissions:
      checks: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-EventHorizon-${{ matrix.unity_version }}
          restore-keys: |
            Library-EventHorizon-
            Library-

      - name: Run Tests
        uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ matrix.unity_version }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test Results
          path: ${{ steps.tests.outputs.artifactsPath }}

      - name: Upload coverage results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Coverage Results
          path: ${{ steps.tests.outputs.coveragePath }}
